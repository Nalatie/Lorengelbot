import telebot
from telebot import types
import sqlite3


bot = telebot.TeleBot('6605211662:AAFG69LG5eruHg0nOrx6YheE_XdDsr3U8hw')
PM_lips = ''
PM_brows = ''
PM_lashes = ''
Lashes = ''
Brows = ''
Name = ''
Phone = ''
Username = ''

markup_check = types.InlineKeyboardMarkup()
check = types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ', callback_data='check_in')
markup_check.add(check)

choice = types.InlineKeyboardMarkup()
yes = types.InlineKeyboardButton(text='–î–∞ ‚úÖ', callback_data='yes')
no = types.InlineKeyboardButton(text='–ù–µ—Ç ‚ùå', callback_data='no')
choice.add(yes, no)

mainmenu = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
note = types.KeyboardButton('–ó–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—É')
contacts = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã –∏ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã')
price = types.KeyboardButton('–ü—Ä–∞–π—Å')
mainmenu.add(note, contacts, price)

one_button = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
back = types.KeyboardButton('–ù–∞–∑–∞–¥ ‚Ü©')
one_button.add(back)

menu_procedure = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
pm = types.KeyboardButton('–ü–µ—Ä–º–∞–Ω–µ–Ω—Ç–Ω—ã–π –º–∞–∫–∏—è–∂')
brows = types.KeyboardButton('–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞, –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ, –ª–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—Ä–æ–≤–µ–π')
lash = types.KeyboardButton('–û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ –∏ –ª–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Å–Ω–∏—Ü')
back1 = types.KeyboardButton('–ù–∞–∑–∞–¥ ‚Ü©')
menu_procedure.add(pm, brows, lash, back1)


print("Bot started")


@bot.message_handler(commands=['start'])
def menu(message):
    conn = sqlite3.connect('base.sql')
    cur = conn.cursor()
    cur.execute("CREATE TABLE IF NOT EXISTS requests (id int auto_increment primary key, username varchar(50), "
                "name varchar(50), phone varchar(13), procedure varchar(60))")

    img = open('logo_L.png', 'rb')
    text = '<b>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!</b> üåø\n\n–í —ç—Ç–æ–º –±–æ—Ç–µ –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—É –∫ –ï–∫–∞—Ç–µ—Ä–∏–Ω–µ –õ–æ—Ä–µ–Ω–≥–µ–ª—å'
    bot.send_photo(message.from_user.id, img, caption=text, parse_mode='html', reply_markup=mainmenu)

    conn.commit()
    cur.close()
    conn.close()


@bot.message_handler(content_types=['text'])
def services(message):
    if message.text == '–ó–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—É':
        msg = bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ—Ü–µ–¥—É—Ä—ã', parse_mode='html',
                               reply_markup=menu_procedure)
        bot.register_next_step_handler(msg, entry)

    elif message.text == '–ö–æ–Ω—Ç–∞–∫—Ç—ã –∏ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã':
        bot.send_message(message.chat.id, '–£—Å–ª—É–≥–∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—É:\n\n_–°–µ–≤–µ—Ä–Ω–æ–µ –®–æ—Å—Å–µ, 10, Plaza '
                                          'Ramstars, –∫–∞–±–∏–Ω–µ—Ç 204, 2 —ç—Ç–∞–∂_\n\n–ó–∞–ø–∏—Å—å —Å 10 –¥–æ 20 –ø–Ω-—Å–±\n–ó–≤–æ–Ω–∏—Ç–µ'
                                          ' +7(958)639-39-20\n–í–ö–æ–Ω—Ç–∞–∫—Ç–µ: [lorengel_pm]'
                                          '(https://vk.com/lorengel_pm)',
                         parse_mode='Markdown', reply_markup=one_button)
    elif message.text == '–ü—Ä–∞–π—Å':
        pricelist = open('priceweb.png', 'rb')
        bot.send_photo(message.chat.id, pricelist, reply_markup=one_button)
    elif message.text == '–ù–∞–∑–∞–¥ ‚Ü©':
        bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚úî', reply_markup=mainmenu)


def entry(message):
    if message.text == '–ü–µ—Ä–º–∞–Ω–µ–Ω—Ç–Ω—ã–π –º–∞–∫–∏—è–∂':
        butt = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1, one_time_keyboard=True)
        lips = types.KeyboardButton('–ì—É–±—ã')
        brow_but = types.KeyboardButton('–ë—Ä–æ–≤–∏')
        lashes_but = types.KeyboardButton('–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –º–µ–∂—Ä–µ—Å–Ω–∏—á–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞')
        back2 = types.KeyboardButton('–ù–∞–∑–∞–¥ ‚Ü©')
        butt.add(lips, brow_but, lashes_but, back2)
        msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ –ø–µ—Ä–º–∞–Ω–µ–Ω—Ç–Ω–æ–≥–æ –º–∞–∫–∏—è–∂–∞', parse_mode='html',
                               reply_markup=butt)
        bot.register_next_step_handler(msg, typepm)
    elif message.text == '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞, –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ, –ª–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—Ä–æ–≤–µ–π':
        global Brows
        Brows = message.text
        msg = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫ —è –º–æ–≥—É –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è')
        bot.register_next_step_handler(msg, request_phone)
    elif message.text == '–û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ –∏ –ª–∞–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Å–Ω–∏—Ü':
        global Lashes
        Lashes = message.text
        msg = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫ —è –º–æ–≥—É –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è')
        bot.register_next_step_handler(msg, request_phone)
    elif message.text == '–ù–∞–∑–∞–¥ ‚Ü©':
        msg = bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚úî', parse_mode='html',
                               reply_markup=mainmenu)
        bot.register_next_step_handler(msg, entry)


def typepm(message):
    if message.text == '–ì—É–±—ã':
        global PM_lips
        PM_lips = '–ü–µ—Ä–º–∞–Ω–µ–Ω—Ç–Ω—ã–π –º–∞–∫–∏—è–∂ –≥—É–±'
        msg = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫ —è –º–æ–≥—É –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è')
        bot.register_next_step_handler(msg, request_phone)

    elif message.text == '–ë—Ä–æ–≤–∏':
        global PM_brows
        PM_brows = '–ü–µ—Ä–º–∞–Ω–µ–Ω—Ç–Ω—ã–π –º–∞–∫–∏—è–∂ –±—Ä–æ–≤–µ–π'
        msg = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫ —è –º–æ–≥—É –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è')
        bot.register_next_step_handler(msg, request_phone)

    elif message.text == '–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –º–µ–∂—Ä–µ—Å–Ω–∏—á–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞':
        global PM_lashes
        PM_lashes = message.text
        msg = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫ —è –º–æ–≥—É –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è')
        bot.register_next_step_handler(msg, request_phone)

    elif message.text == '–ù–∞–∑–∞–¥ ‚Ü©':
        msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ—Ü–µ–¥—É—Ä—ã', parse_mode='html',
                               reply_markup=menu_procedure)
        bot.register_next_step_handler(msg, entry)


def request_phone(message):
    global Name
    global Username
    Name = message.text
    Username = message.from_user.username
    number = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ '
                                               '+7(XXX)XXX-XX-XX')
    bot.register_next_step_handler(number, create_request)


def create_request(message):
    global Phone
    Phone = message.text
    conn = sqlite3.connect('base.sql')
    cur = conn.cursor()
    cur.execute("INSERT INTO requests (username, name, phone, procedure) VALUES ('%s', '%s', '%s', '%s')"
                % (Username, Name, Phone, PM_lips or PM_brows or PM_lashes or Brows or Lashes))
    conn.commit()
    cur.close()
    conn.close()

    bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏–º –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ.', parse_mode='html',
                     reply_markup=markup_check)

    if message.text == '–ù–∞–∑–∞–¥ ‚Ü©':
        bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚úî', reply_markup=mainmenu)


@bot.callback_query_handler(func=lambda call: True)
def check_in(call):
    conn = sqlite3.connect('base.sql')
    cur = conn.cursor()
    cur.execute('SELECT * FROM requests ORDER BY id DESC LIMIT 1')
    request = cur.fetchone()
    username = request[1]
    name = request[2]
    phone = request[3]
    procedure = request[4]

    if call.data == "check_in":
        bot.answer_callback_query(callback_query_id=call.id, text='–°–µ–∫—É–Ω–¥—É...')
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text=f'<b>–í–∞—à–µ –∏–º—è:</b> {name}\n<b>–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> {phone}\n'
                                   f'<b>'f'–¢–∏–ø –ø—Ä–æ—Ü–µ–¥—É—Ä—ã:</b> {procedure}\n\n–í—Å—ë –≤–µ—Ä–Ω–æ?', parse_mode='html',
                              reply_markup=choice)
    elif call.data == 'yes':
        bot.answer_callback_query(callback_query_id=call.id, text='–û—Ç–ª–∏—á–Ω–æ, –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞!', show_alert=True)
        keyboard_3 = types.InlineKeyboardMarkup()
        callback_button_1 = types.InlineKeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="mainmenu")
        keyboard_3.add(callback_button_1)
        bot.send_message(call.from_user.id, '<b>–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É!</b> üåø \n–Ø —Å–≤—è–∂—É—Å—å —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è '
                                            '–≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–ø–∏—Å–∏!', parse_mode='html', reply_markup=keyboard_3)
        bot.send_message(-1001887088441, f'<b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!</b>\nTelegram: @{username}\n–ò–º—è: {name}\n–¢–µ–ª–µ—Ñ–æ–Ω: '
                                         f'{phone}\n–¢–∏–ø –ø—Ä–æ—Ü–µ–¥—É—Ä—ã: '
                                         f'{procedure}', parse_mode='html')
    elif call.data == 'no':
        text = '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
        keyboard_3 = types.InlineKeyboardMarkup()
        callback_button_1 = types.InlineKeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="mainmenu")
        keyboard_3.add(callback_button_1)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=text,
                              reply_markup=keyboard_3)
    elif call.data == 'mainmenu':
        bot.send_message(call.message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚úî', reply_markup=mainmenu)

    cur.close()
    conn.close()


bot.polling(none_stop=True)
